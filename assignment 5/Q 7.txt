Q.7 Whatâ€™s async & await Keyword in JavaScript
Solution:
The `async` and `await` keywords are new features in JavaScript that allow you to write asynchronous code in a more synchronous style. This can make your code easier to read and maintain, and it can help you avoid callback hell.

The `async` keyword is used to declare an asynchronous function. An asynchronous function is a function that can return a promise. The `await` keyword is used to wait for the completion of a promise.

For example, the following code makes an asynchronous HTTP request and then prints the response:

```
async function myFunction() {
  const response = await fetch('https://www.example.com');
  console.log(response.text());
}
```

The `async` keyword is used to declare the `myFunction()` function as an asynchronous function. The `await` keyword is used to wait for the completion of the `fetch()` promise. The `fetch()` promise is resolved with the response from the HTTP request. The `console.log()` function then prints the response.

I hope this explanation was helpful. Let me know if you have any other questions.

Here are some of the benefits of using async/await:

* **They make asynchronous code easier to read and maintain.**
* **They can help you avoid callback hell.**
* **They can make your code more concise.**

However, there are also some drawbacks to using async/await:

* **They can be more difficult to debug.**
* **They can be slower than using callbacks.**

Overall, async/await is a powerful tool that can be used to write more concise and readable asynchronous code. However, it is important to be aware of the drawbacks before using it.